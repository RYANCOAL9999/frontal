version: '3.8'

services:
  # --- PostgreSQL Database Service ---
  db:
    container_name: postgres_db
    image: postgres:16.2-alpine
    restart: always
    environment:
      POSTGRES_DB: fastapi_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fastapi_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  # --- Prometheus Monitoring Service ---
  prometheus:
    container_name: prometheus_server
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus
    networks:
      - app_network
    depends_on:
      api: 
        condition: service_started

  # --- FastAPI API Service ---
  api:
    container_name: fastapi_api
    build:
      context: ./server/api
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8000:8000"
    environment:
      API_VERSION: "1.0.0"
      DATABASE_URL: "postgresql://postgres:mysecretpassword@db:5432/fastapi_db"
      LOADTEST_MODE: "false"
      APP_HOST: "0.0.0.0"
      APP_PORT: "8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  db_data: 
  prometheus_data: